<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.17.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.pluralsight</groupId>
	<artifactId>conference-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>conference-demo</name>
	<description>Demo project for Spring Boot</description>
	<!-- For option C (external tomcat) choose "war", other wise choose jar -->
	<packaging>war</packaging>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<!-- Here are three versions of the dependencies for three scenarios:
		A. Using the defaults
		B. Using Jetty instead of Tomcat for the embedded container
		C. Outputting a WAR file for use on an external Tomcat container.
		Look for comments with A, B, C to show what you need.
		Going for C since this branch is the warversion.
		-->

		<!-- Use IntelliJ CMD+/ to comment/uncomment out -->

		<!-- A. Using the defaults -->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-web</artifactId>-->
<!--		</dependency>-->
<!--		-->

<!--		&lt;!&ndash; B. Using Jetty instead of Tomcat for the embedded container &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-web</artifactId>-->
<!--			<exclusions>-->
<!--				&lt;!&ndash; Exclude Tomcat dependency so that it's not used as a container&ndash;&gt;-->
<!--				<exclusion>-->
<!--					<groupId>org.springframework.boot</groupId>-->
<!--					<artifactId>spring-boot-starter-tomcat</artifactId>-->
<!--				</exclusion>-->
<!--			</exclusions>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			&lt;!&ndash; works with exclusion above, Tomcat is excluded and jetty is included, so Spring will use Jetty as the server container &ndash;&gt;-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-jetty</artifactId>-->
<!--		</dependency>-->

		<!-- C. Outputting a WAR file for use on an external Tomcat container. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<!-- This version means that tomcat will not be embedded, but rather tomcat will already be provided by a stand-alone tomcat installation -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.6</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
